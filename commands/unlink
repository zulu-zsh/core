#!/usr/bin/env zsh

###
# Print usage information
###
function _zulu_unlink_usage() {
  echo $(color yellow "Usage:")
  echo "  zulu unlink <package>"
}

###
# The zulu unlink function
###
function _zulu_unlink() {
  local help package json dir file link base
  local -a dirs

  zparseopts -D h=help -help=help

  if [[ -n $help ]]; then
    _zulu_unlink_usage
    return
  fi

  base=${ZULU_DIR:-"${ZDOTDIR:-$HOME}/.zulu"}
  config_dir=${ZULU_CONFIG_DIR:-"${ZDOTDIR:-$HOME}/.config/zulu"}
  index="$base/index/packages"

  package="$1"

  # Check if the package is already installed
  root="$base/packages/$package"
  if [[ ! -d "$root" ]]; then
    echo $(color red "Package '$package' is not installed")
    return 1
  fi

  _zulu_spinner_start "Unlinking $package..."

  # Get the JSON from the index
  json=$(cat "$index/$package")

  # Loop through the 'bin' and 'share' objects
  dirs=('bin' 'init' 'share')
  for dir in $dirs[@]; do
    # Convert the bin/share object into an associative array
    typeset -A files; files=($(echo $(jsonval $json $dir) | tr "," "\n" | tr ":" " "))

    # Loop through each of the values in the array, the key is a file within
    # the package, the value is the name of a symlink to create in the directory
    for file link ("${(@kv)files}") [[ -L "$base/$dir/$link" ]] && rm "$base/$dir/$link"
  done

  _zulu_spinner_stop
  echo "$(color green 'âœ”') Finished unlinking $package        "
}
